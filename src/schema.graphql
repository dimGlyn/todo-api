type Query {
  todos(userId: ID!): [Todo!]!
  todo(todoId: ID!, userId: ID!): Todo!    

  login(data: LogInInput!): AuthPayload!
}

type Mutation {
  createTodo(data: CreateTodoInput!, userId: ID!): Todo!
  deleteTodo(todoId: ID!, userId: ID!): Todo!
  updateTodo(todoId: ID!, userId: ID!, data: UpdateTodoInput!): Todo!
  markDone(todoId: ID!, userId: ID!): Todo!
  markUnDone(todoId: ID!, userID: ID!): Todo!

  signUp(data: SignUpInput!): AuthPayload!
}

type Todo {
  id: ID!
  text: String!
  tags: [String!]
  dueDate: String
  done: Boolean!
  user: User!
}

type User {
  id: ID!
  name: String!
  email: String!
  todos: [Todo!]!
}

input CreateTodoInput {
  text: String!
  tags: [String!]
  dueDate: String
}

input UpdateTodoInput {
  text: String
  tags: [String!]
  dueDate: String
  done: Boolean    
}

input SignUpInput {
  name: String!
  email: String!
  password: String!
}

input LogInInput {
  email: String!
  password: String!
}

type AuthPayload {
  token: String!
  user: User!
}